/* eslint-disable functional/no-class, functional/no-this-expression, react/no-set-state */
import React from "react";

import pick_random_NP_from from "../array/pick-random";

// todo-team: make this a HOC so that we can properly wrap components itself, instead of wrapping their parents. ie, currently if an error happens in a component - his parent goes down, instead of him
export class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = {hasError: false};
  }

  componentDidCatch(error, info) {
    // Display fallback UI
    this.setState({hasError: true});
    // todo-2: log the error to an error reporting service
    // logErrorToMyService(error, info);
    return void 0;
  }

  // noinspection FunctionWithMultipleReturnPointsJS
  render() {
    if (this.state.hasError) {
      const errorTypes = [
        "–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω–µ–π—à–∏–π",
        "–£–∂–∞—Å–∞—é—â–∏–π",
        "–ù–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–π",
        "–ü–æ–ª–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã–π",
        "–ë–∏–ø–æ–ª—è—Ä–Ω—ã–π",
        "–û—Ä–±–∏—Ç–∞–ª—å–Ω—ã–π",
        "–ú–µ–∂–≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–π",
        "–°–º–µ—Ä—Ç–æ–Ω–æ—Å–Ω—ã–π",
      ];
      // You can render any custom fallback UI
      return (
        <h3 style={{color: "orange"}}>
          {/*// todo-2: change the text when error reporting service is online */}
          {`–ü—Ä–æ–∏–∑–æ—à—ë–ª ${pick_random_NP_from(errorTypes)}`} —Å–±–æ–π! ü§ï
          <br />
          –°–∫–æ—Ä–µ–µ —Å–æ–æ–±—â–∏—Ç–µ –≤{" "}
          <a href="mailto: support@bankaria.ru?subject=–û—à–∏–±–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞&body=–ü—Ä–∏–≤–µ—Ç! –£ –º–µ–Ω—è –≤—ã–ª–µ–∑–ª–∞ –æ—à–∏–±–∫–∞, –∫–æ–≥–¥–∞ —è... (–æ–ø–∏—à–∏—Ç–µ, –ø–∂–ª, –∫–∞–∫–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏–π –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –æ—à–∏–±–∫–µ, —á—Ç–æ–±—ã –º—ã —Å–º–æ–≥–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∏ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å)">
            —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏
          </a>
          ! –ú—ã –≤—Å—ë –∏—Å–ø—Ä–∞–≤–∏–º üõ†Ô∏è –∏ –≤—ã —Å–Ω–æ–≤–∞ —Å–º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è —Ä–∞–±–æ—Ç–æ–π –≤ –ë–∞–Ω–∫–ê—Ä–∏–∏ üöÄ
        </h3>
      );
    }
    return this.props.children;
  }
}
