/// <reference types="jest" />
declare global {
    namespace jest {
        interface Matchers<R, T> {
            /**
             * Asserts that ${value} is `true`, `false`, `new Boolean(true)`, or `new Boolean(false)`.
             * @example
             * expect(false).toBeBoolean();
             */
            toBeBoolean(): R;
        }
        interface Expect {
            /**
             * Asserts that ${value} is `true`, `false`, `new Boolean(true)`, or `new Boolean(false)`.
             * @example
             * expect(false).toEqual(
             *   expect.toBeBoolean()
             * );
             */
            toBeBoolean<T>(): JestMatchers<T>;
        }
    }
}
export declare const toBeBooleanMatcher: (value: any) => {
    message: () => string;
    pass: boolean; /**
     * Asserts that ${value} is `true`, `false`, `new Boolean(true)`, or `new Boolean(false)`.
     * @example
     * expect(false).toBeBoolean();
     */
};
