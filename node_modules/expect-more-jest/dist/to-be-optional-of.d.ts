/// <reference types="jest" />
declare global {
    namespace jest {
        interface Matchers<R, T> {
            /**
             * Asserts that ${value} is equal to ${other} or undefined.
             * @example
             * expect({ x: 12, y: 22 }).toBeOptionalOf({
             *   x: expect.toBeNumber(),
             *   y: expect.toBeNumber(),
             * });
             * expect(undefined).toBeOptionalOf({
             *   x: expect.toBeNumber(),
             *   y: expect.toBeNumber(),
             * });
             */
            toBeOptionalOf(other: any): R;
        }
        interface Expect {
            /**
             * Asserts that ${value} is equal to ${other} or undefined.
             * @example
             * expect({ x: 12, y: 22 }).toEqual(
             *   expect.toBeOptionalOf({
             *     x: expect.toBeNumber(),
             *     y: expect.toBeNumber()
             *   })
             * );
             * expect(undefined).toEqual(
             *   expect.toBeOptionalOf({
             *     x: expect.toBeNumber(),
             *     y: expect.toBeNumber()
             *   })
             * );
             */
            toBeOptionalOf<T>(other: any): JestMatchers<T>;
        }
    }
}
export declare const toBeOptionalOfMatcher: (value: any, other: any) => {
    message: () => string;
    pass: boolean;
};
